{"name":"Monster","tagline":"Beautiful server monitoring in like 5 minutes.","body":"# Monitoring sucks right now.\r\nWe'll say it out loud: no one has the time to set up Nagios. No one even has time to set up Munin. If you're in a startup, you most likely don't have a dedicated admin. Couple that with the need to constantly watch your servers to make sure they don't die on you and your users, and you're in a weird place. You have a huge need to monitor, but no resources.\r\n\r\nWe've been there. And now we're here to help.\r\n\r\n# How does Monster help?\r\nBy giving you nearly instant monitoring. Beautiful monitoring.\r\n\r\nHave nginx running? Monster will find out, look for the usual log files, and set nginx monitoring up for you. Using Postgres? MySQL? Monster will find out, ask you for some credentials and boom â€” you have a bunch of clean charts showing your web server and database usage. \r\n\r\n# Getting started\r\nHere, get started:\r\n```\r\n$ git clone XX \r\n$ pip install -r requirements.txt\r\n$ ./start.py\r\n```\r\n\r\nNow you have this charming thing listening at `localhost:5000`:\r\n\r\n<screenshot>\r\n\r\n# What if I actually want to configure something?\r\nNo problem. The `config.sample.cfg` file is full of good advice you can just ignore and drive into walls, or use to hack up a more suiting configuration. Actually, we'll paste it here for you:\r\n\r\n```\r\n[overall]\r\n; Enables password protected access. Removing this line\r\n; will cause monster to be available to everyone.\r\npassword = golem14\r\n; Allows you to bind on a specific address/port,\r\n; default is 127.0.0.1:5000. Bind on 0.0.0.0 to make\r\n; monster globally accessible.\r\nbind = 127.0.0.1:3456 \r\n\r\n; Specify the probes you want to use here.\r\n; Per-probe configuration is done in their respective \r\n; sections later on, take a look below.\r\n[probes]\r\nosx.LoadAvg\r\nosx.MemInfo\r\nosx.HeavyProcessStat\r\nhttpd.Apache2\r\ndb.Postgres\r\ndb.MySQL\r\n\r\n\r\n; Probe configuration.\r\n; The name of the section must be identical to the\r\n; probe's full name.\r\n[db.Postgres]\r\n; Specify here your PostgreSQL account settings.\r\n; All of them are required.\r\nusername = takeoff\r\npassword = \r\ndatabase = takeoff\r\n\r\n[db.MySQL]\r\n; Specify here your MySQL account settings.\r\n; All of them are required.\r\nusername = root\r\npassword =\r\n\r\n[osx.HeavyProcessStat]\r\n; This option changes number of processes showed.\r\n; Default is 5.\r\nproc_number = 5\r\n```\r\n\r\n# What do you support?\r\nThe current list of probes is:\r\n\r\n* `linux.LoadAvg` - traditional system load\r\n* `linux.MemInfo` - a rundown of memory usage\r\n* `linux.HeavyProcessStat` - CPU and memory hogs\r\n* `linux.SystemInfo` - uptime, hostname, OS info\r\n* `osx.LoadAvg` - traditional system load\r\n* `osx.MemInfo` - a rundown of memory usage\r\n* `osx.HeavyProcessStat` - CPU and memory hogs\r\n* `osx.SystemInfo` - uptime, hostname, OS info\r\n* `httpd.Apache2` - requests/transfer + Geo IP visualization\r\n* `httpd.Nginx` - requests/transfer + Geo IP visualization\r\n* `db.MySQL` - query statistics\r\n* `db.Postgres` - query statistics\r\n\r\nWe'll be expanding.\r\n\r\n# I want to see it.\r\nHere you go, a bunch of screenshots of various charts:\r\n\r\n\r\n# Authors and Contributors\r\nMonster is maintained by @diego351 and @maligree. We're doing this in our spare time, so if you think you could spare a few cycles to contribute, we'd honestly be jolly as fuck.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}